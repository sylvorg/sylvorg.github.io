#+setupfile: ./settings/README.org

* CNAME
:PROPERTIES:
:ID:       b2bb02de-0ced-4df2-a6f5-2734845e163f
:CUSTOM_ID:       b2bb02de-0ced-4df2-a6f5-2734845e163f
:END:

#+begin_src plaintext :tangle (meq/tangle-path)
syvl.org
#+end_src

* index.html
:PROPERTIES:
:header-args:shell+: :noweb-ref index.html
:header-args:html+: :noweb-ref index.html
:header-args:nix+: :noweb-ref index.html
:ID:       f3e32608-7200-4808-9d42-59112f32d395
:CUSTOM_ID:       f3e32608-7200-4808-9d42-59112f32d395
:END:

Programs necessary for the bootstrap:

#+name: 58b62ef7-d880-4cc4-9d4d-9d0e76983d2f
#+begin_src text
yadm git "make gnumake" fd emacs
#+end_src

#+name: 4751ce0e-6018-4f00-8c6d-89f43c3fb792
#+begin_src emacs-lisp :eval never-export
(with-temp-buffer (insert-file-contents "./README.html") (buffer-string))
#+end_src

#+begin_src plaintext :tangle (meq/tangle-path) :exports none
<<index.html>>
#+end_src

This was adapted from [[https://ellipsis.sh/][ellipsis.sh]], raw file [[https://raw.githubusercontent.com/ellipsis/ellipsis/gh-pages/index.html][here]]:

#+begin_src shell
<<\EOF
#+end_src

#+begin_src html
<<4751ce0e-6018-4f00-8c6d-89f43c3fb792()>><!--
#+end_src

#+begin_src shell
EOF
#+end_src

#+begin_src shell
setFail () { set -eo pipefail; }
ensure () {
    hash "$1" 2> /dev/null
    if [ $? -ne 0 ]; then
        hash nix 2> /dev/null
        [ $? -ne 0 ] && sh <(curl -fsSL https://nixos.org/nix/install) --daemon
        [ -z "$2" ] && nix-env -i "$1" || nix-env -i "$2"
    fi
}
remove () { [ -z "$2" ] && nix-env -e "$1" || nix-env -e "$2"; }

for p in <<58b62ef7-d880-4cc4-9d4d-9d0e76983d2f>>; do ensure $p; done

setFail

yadm clone --no-bootstrap https://github.com/<<username>>/<<username>>.git || :
yadm remote set-url --push origin git@github.com:<<username>>/<<username>>.git
nixos-generate-config || :

subinit="submodule update --init --depth 1 --recursive --remote --force"
#+end_src

Adapted from [[https://unix.stackexchange.com/users/48083/graeme][Graeme's]] answer [[https://unix.stackexchange.com/a/121255/270053][here]],
and [[https://stackoverflow.com/users/2092245/ferhtgoldaraz][ferhtgoldaraz's]] answer [[https://stackoverflow.com/a/15696250/10827766][here]]:

#+begin_src shell
read -p $'Tell me your secrets!\n' secrets < /dev/tty
#+end_src

#+begin_src shell
if [ "$secrets" != "n" ] || [ "$secrets" != "no" ]; then
    yadm sec clone --no-bootstrap $secrets || :
    GIT_SSL_NO_VERIFY=1 GIT_DISCOVERY_ACROSS_FILESYSTEM=1 yadm sec $subinit
    chmod +x "$HOME/.config/yadm-sec/bootstrap"
    "$HOME/.config/yadm-sec/bootstrap"
fi

GIT_SSL_NO_VERIFY=1 GIT_DISCOVERY_ACROSS_FILESYSTEM=1 yadm $subinit
make -f "$HOME/.emacs.d/makefile" soft-init
chmod +x "$HOME/.config/yadm/bootstrap"
"$HOME/.config/yadm/bootstrap"

# for p in <<58b62ef7-d880-4cc4-9d4d-9d0e76983d2f>>; do remove $p; done
#+end_src

* makefile

#+begin_src makefile :tangle (meq/tangle-path)
.RECIPEPREFIX := |
.DEFAULT_GOAL := super-push

# Adapted From: https://www.systutorials.com/how-to-get-the-full-path-and-directory-of-a-makefile-itself/
mkfilePath := $(abspath $(lastword $(MAKEFILE_LIST)))
mkfileDir := $(dir $(mkfilePath))

et:
|chmod +x $(mkfileDir)/settings/*.sh
|$(mkfileDir)/settings/org-export.sh $(mkfileDir)/README.org
|$(mkfileDir)/settings/org-tangle.sh $(mkfileDir)/README.org

commit:
|git -C $(mkfileDir) commit --allow-empty-message -am ""

push:
|git -C $(mkfileDir) push

cpush: commit push

super-push: et cpush
#+end_src